@using Denial_Coding.BAL.Generics
@{
    int sno = 1;
}

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "formAllotGrid" }))
{
    <table class="table table-striped responsive-utilities jambo_table bulk_action customTable" id="allotGrid">
        <thead>
            <tr class="heading">
                <th><input type="checkbox" name="chemeli" class="checkbox" id="chkqcInboxGroup" /></th>
                <th class="sorting"><label>S.No</label></th>

                @foreach (System.Data.DataColumn col in Model.Columns)
                {
                    <th>@col.Caption</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (System.Data.DataRow row in Model.Rows)
            {
                <tr>
                    <td><input type="checkbox" class="checkbox allotChk chk_@Convert.ToInt32(sno)" id="chk_@Convert.ToInt32(sno)" onclick="TestClick()" /></td>
                    <td id=@Convert.ToInt32(sno)>@Convert.ToInt32(sno)</td>

                    @Html.HiddenFor(x => row[0], new { @id = "btId" })
                    @foreach (var cell in row.ItemArray)
                    {
                      if (@cell.ToString() == "0")
                                        {
                                            <td></td>
                                        }
                                        else
                                        { 
                                        <td>@cell.ToString()</td>
                                    }
                 }
                </tr>
                    sno++;
            }

        </tbody>
    </table>
    <input type="text" value="" id="txtHidden" style="display:none"/>
}

<script>
    var table;
    //$('#ddlBatch').on('change', function () {

    //    if ($('#ddlBatch option:selected').text().trim() == "-- Select Batch--") {
    //        table.search('').columns(4).search('').draw();
    //    }
    //    else {
    //        table.columns(4).search($('#ddlBatch option:selected').text().trim()).draw();
    //    }

    //});
    $(function () {
        table= $('#allotGrid').DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": true,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "columnDefs": [
                        {
                            "targets": [1],
                            "bSortable": false,
                        },
                        {
                            "targets": [2],
                            "visible": false

                        }
            ]

        });
        //for (var i = 0; i < checkList.length; i++) {
        //    $('.' + checkList[i]).prop('checked', true);


        //}
        //var locationnames = table.columns(4).data();
        //$("#ddlBatch").empty();
        //$("#ddlBatch").append("<option value='0'>-- Select Batch--</option>");
        //$.each($.unique(locationnames[0]), function (index, loc) {
        //    $("#ddlBatch").append("<option value=''>" + loc + "</option>");
        //});
    });
    $("#chkqcInboxGroup").click(function () {
        $(".allotChk").prop('checked', $(this).prop('checked'));
        TestClick();
    });
   
    function TestClick() {        
        var countImagesWithoutSrc = 0;
        var all = new Array();
        var tableControl = document.getElementById('allotGrid');
        $('input:checkbox:checked', tableControl).each(function () {

            checkList.push($(this).attr("id"));           
            all[countImagesWithoutSrc] = $(this).closest('tr').find('#btId').val();
            ++countImagesWithoutSrc;

        }).get();

        $('#txtHidden').val(all);
        //alert($('#txtHidden').val());
        //alert($('#txtHidden').val());
    }
    @*$(function () {

        $.ajax({
            url: '@Url.Action("GetDistnctBatches")',
            dataType: 'json',
            data: {},
            success: function (data) {
                $("#ddlBatch").empty();
                $("#ddlBatch").append("<option value='0'>--Select Batch Name--</option>");
                $.each(data, function (index, item) {
                    $("#ddlBatch").append("<option value='" + item + "'>" + @CryptoDependancy.CryptoGraphy.Decrypt(item) + "</option>");
                });
            }
        })
    });*@
</script>
